@* Reusable Like Button Component *@
<button @onclick="HandleClick" class="hover:text-gray-600 dark:hover:text-gray-400 transition-transform active:scale-90">
    @if (IsLiked)
    {
        <svg class="w-6 h-6 text-red-500 fill-current animate-like" viewBox="0 0 24 24">
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
        </svg>
    }
    else
    {
        <svg class="w-6 h-6 text-black dark:text-white" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
        </svg>
    }
</button>

<style>
    @@keyframes like {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.2); }
    }
    
    .animate-like {
        animation: like 0.3s ease-in-out;
    }
</style>

@code {
    [Parameter] public bool IsLiked { get; set; }
    [Parameter] public EventCallback OnToggle { get; set; }

    private async Task HandleClick()
    {
        await OnToggle.InvokeAsync();
    }
}

