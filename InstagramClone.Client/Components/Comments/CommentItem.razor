@using InstagramClone.Core.DTOs
@using InstagramClone.Client.Resources

<div class="@(IsReply ? "ml-8" : "")">
    <div class="flex items-start space-x-3 py-2">
        <!-- Avatar -->
        <div class="w-8 h-8 rounded-full bg-gradient-to-tr from-yellow-400 to-pink-600 p-[2px] flex-shrink-0">
            <div class="w-full h-full rounded-full bg-white dark:bg-black flex items-center justify-center">
                <span class="text-xs font-semibold text-gray-700 dark:text-gray-300">@Comment.Username[0].ToString().ToUpper()</span>
            </div>
        </div>

        <div class="flex-1 min-w-0">
            <!-- Comment Content -->
            <div class="flex items-start justify-between">
                <div class="flex-1 mr-2">
                    <a href="/profile/@Comment.Username" class="font-semibold text-sm text-black dark:text-white hover:text-gray-600 dark:hover:text-gray-400">
                        @Comment.Username
                    </a>
                    <span class="text-sm text-black dark:text-white ml-2">@Comment.Content</span>
                </div>
                
                <!-- Like Button -->
                <button @onclick="OnLikeToggle" class="flex-shrink-0 mt-1">
                    @if (Comment.IsLikedByCurrentUser)
                    {
                        <svg class="w-3 h-3 text-red-500 fill-current" viewBox="0 0 24 24">
                            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                        </svg>
                    }
                    else
                    {
                        <svg class="w-3 h-3 text-black dark:text-white" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                        </svg>
                    }
                </button>
            </div>

            <!-- Comment Meta -->
            <div class="flex items-center space-x-3 mt-1 text-xs text-gray-500 dark:text-gray-400">
                <span>@GetTimeAgo(Comment.CreatedAt)</span>
                @if (Comment.LikesCount > 0)
                {
                    <span class="font-semibold">@Comment.LikesCount @(Comment.LikesCount == 1 ? UI.Common_Like : UI.Common_Likes)</span>
                }
                @if (!IsReply && OnReply.HasDelegate)
                {
                    <button @onclick="OnReply" class="font-semibold hover:text-gray-700 dark:hover:text-gray-300">
                        @UI.Common_Reply
                    </button>
                }
            </div>

            <!-- View Replies -->
            @if (!IsReply && Comment.RepliesCount > 0 && !ShowReplies)
            {
                <button @onclick="OnViewReplies" class="flex items-center space-x-2 mt-2 text-xs text-gray-500 dark:text-gray-400 font-semibold hover:text-gray-700 dark:hover:text-gray-300">
                    <span class="w-6 border-t border-gray-300 dark:border-gray-600"></span>
                    <span>@UI.CommentItem_ViewReplies (@Comment.RepliesCount)</span>
                </button>
            }
        </div>
    </div>
</div>

@code {
    [Parameter, EditorRequired] public CommentDto Comment { get; set; } = default!;
    [Parameter] public bool IsReply { get; set; }
    [Parameter] public bool ShowReplies { get; set; }
    [Parameter] public EventCallback OnLikeToggle { get; set; }
    [Parameter] public EventCallback OnReply { get; set; }
    [Parameter] public EventCallback OnViewReplies { get; set; }
    
    [Inject] private TimeService TimeService { get; set; } = default!;

    private string GetTimeAgo(DateTime dateTime) => TimeService.GetTimeAgo(dateTime);
}

