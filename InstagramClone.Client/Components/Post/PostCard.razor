@using InstagramClone.Core.DTOs
@using InstagramClone.Client.Resources

<div class="bg-white dark:bg-black border border-gray-300 dark:border-gray-800 rounded-sm mb-6 max-w-[470px] w-full">
    <!-- Post Header -->
    <div class="flex items-center justify-between px-4 py-3">
        <div class="flex items-center space-x-3">
            <div class="w-8 h-8 rounded-full bg-gradient-to-tr from-yellow-400 to-pink-600 p-[2px]">
                <div class="w-full h-full rounded-full bg-white dark:bg-black flex items-center justify-center">
                    <span class="text-xs font-semibold text-gray-700 dark:text-gray-300">@Post.Username[0].ToString().ToUpper()</span>
                </div>
            </div>
            <a href="/profile/@Post.Username" class="font-semibold text-sm text-black dark:text-white hover:text-gray-600 dark:hover:text-gray-400">
                @Post.Username
            </a>
        </div>
        <button class="text-black dark:text-white hover:text-gray-600">
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <circle cx="12" cy="12" r="1.5"/>
                <circle cx="12" cy="6" r="1.5"/>
                <circle cx="12" cy="18" r="1.5"/>
            </svg>
        </button>
    </div>

    <!-- Post Image -->
    <div class="relative w-full" style="padding-bottom: 100%;">
        <img src="@Post.ImageUrl" alt="post" class="absolute inset-0 w-full h-full object-cover cursor-pointer" @onclick="OnImageClick" />
    </div>

    <!-- Post Actions -->
    <div class="px-4 py-3">
        <div class="flex items-center justify-between mb-2">
            <div class="flex items-center space-x-4">
                <LikeButton IsLiked="@Post.IsLikedByCurrentUser" OnToggle="@OnLikeToggle" />
                <button @onclick="OnCommentClick" class="hover:text-gray-600 dark:hover:text-gray-400">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
                    </svg>
                </button>
                <button class="hover:text-gray-600 dark:hover:text-gray-400">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"/>
                    </svg>
                </button>
            </div>
            <button class="hover:text-gray-600 dark:hover:text-gray-400">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"/>
                </svg>
            </button>
        </div>

        <!-- Likes Count -->
        @if (Post.LikesCount > 0)
        {
            <div class="font-semibold text-sm text-black dark:text-white mb-2">
                @Post.LikesCount @(Post.LikesCount == 1 ? UI.Common_Like : UI.Common_Likes)
            </div>
        }

        <!-- Caption -->
        @if (!string.IsNullOrWhiteSpace(Post.Caption))
        {
            <div class="text-sm text-black dark:text-white mb-1">
                <a href="/profile/@Post.Username" class="font-semibold hover:text-gray-600 dark:hover:text-gray-400">@Post.Username</a>
                <span class="ml-1">@Post.Caption</span>
            </div>
        }

        <!-- View Comments -->
        @if (Post.CommentsCount > 0)
        {
            <button @onclick="OnCommentClick" class="text-sm text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 mb-1">
                @UI.PostCard_ViewAllComments @Post.CommentsCount @(Post.CommentsCount == 1 ? UI.Common_Comment : UI.Common_Comments)
            </button>
        }

        <!-- Time Ago -->
        <div class="text-xs text-gray-500 dark:text-gray-400 uppercase">
            @GetTimeAgo(Post.CreatedAt)
        </div>
    </div>

    <!-- Add Comment (Quick) -->
    <div class="border-t border-gray-300 dark:border-gray-800 px-4 py-3">
        <div class="flex items-center">
            <svg class="w-6 h-6 mr-3 text-black dark:text-white" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            <input 
                type="text" 
                placeholder="@UI.PostCard_AddComment" 
                class="flex-1 bg-transparent text-sm text-black dark:text-white placeholder-gray-500 focus:outline-none"
                @onfocus="OnCommentClick"
                readonly />
        </div>
    </div>
</div>

@code {
    [Parameter, EditorRequired] public PostDto Post { get; set; } = default!;
    [Parameter] public EventCallback OnLikeToggle { get; set; }
    [Parameter] public EventCallback OnCommentClick { get; set; }
    [Parameter] public EventCallback OnImageClick { get; set; }
    
    [Inject] private TimeService TimeService { get; set; } = default!;

    private string GetTimeAgo(DateTime dateTime) => TimeService.GetInstagramTimeAgo(dateTime);
}

